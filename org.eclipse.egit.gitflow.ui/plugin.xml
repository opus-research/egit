<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
	<extension
			point="org.eclipse.ui.menus">
		<menuContribution
				locationURI="popup:org.eclipse.egit.ui.RepositoriesView?before=group.open">
			<separator
					name="group.gitflow"
					visible="true">
			</separator>
		</menuContribution>
	</extension>
	<extension
			point="org.eclipse.ui.menus">
		<menuContribution
				locationURI="popup:org.eclipse.egit.ui.RepositoriesView?after=group.gitflow">
			<command
					commandId="org.eclipse.egit.gitflow.ui.command.init"
					icon="icons/obj16/git-flow_16x10.png"
					label="%TeamGitFlowInit.name"
					style="push">
				<visibleWhen
						checkEnabled="false">
					<and>
						<reference definitionId="org.eclipse.egit.gitflow.ui.commandEnabled" />
						<with variable="org.eclipse.egit.ui.currentRepository">
							<not>
								<test
										forcePluginActivation="true"
										property="GitFlowRepository.isInitialized">
								</test>
							</not>
						</with>
					</and>
				</visibleWhen>
			</command>
		</menuContribution>
		<menuContribution
				locationURI="popup:org.eclipse.egit.ui.RepositoriesView?after=group.gitflow">
			<menu
					icon="icons/obj16/git-flow_16x10.png"
					label="%TeamGitFlowMenu.name">
				<visibleWhen
						checkEnabled="false">
					<with variable="org.eclipse.egit.ui.currentRepository">
						<test
								forcePluginActivation="true"
								property="GitFlowRepository.isInitialized">
						</test>
					</with>
				</visibleWhen>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featureStart"
						label="%TeamGitFlowFeatureStart.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featureFinish"
						label="%TeamGitFlowFeatureFinish.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featureRebase"
						label="%TeamGitFlowFeatureRebase.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featureCheckout"
						label="%TeamGitFlowFeatureCheckout.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featureTrack"
						label="%TeamGitFlowFeatureTrack.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featurePublish"
						label="%TeamGitFlowFeaturePublish.name"
						style="push">
				</command>
				<separator
						name="org.eclipse.egit.gitflow.ui.separator1"
						visible="true">
				</separator>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.releaseStart"
						label="%TeamGitFlowReleaseStart.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.releaseFinish"
						label="%TeamGitFlowReleaseFinish.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.releasePublish"
						label="%TeamGitFlowReleasePublish.name"
						style="push">
				</command>
				<separator
						name="org.eclipse.egit.gitflow.ui.separator2"
						visible="true">
				</separator>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.hotfixStart"
						label="%TeamGitFlowHotfixStart.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.hotfixFinish"
						label="%TeamGitFlowHotfixFinish.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.hotfixPublish"
						label="%TeamGitFlowHotfixPublish.name"
						style="push">
				</command>
				<separator
						name="org.eclipse.egit.gitflow.ui.separator3"
						visible="true">
				</separator>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.developCheckout"
						label="%TeamGitFlowDevelopCheckout.name"
						style="push">
				</command>
			</menu>
		</menuContribution>
	</extension>
	<extension
			point="org.eclipse.ui.commands">
		<command
				categoryId="org.eclipse.egit.ui.commandCategory"
				id="org.eclipse.egit.gitflow.ui.command.init"
				name="%TeamGitFlowInit.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.featureStart"
				name="%TeamGitFlowFeatureStart.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.featureFinish"
				name="%TeamGitFlowFeatureFinish.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.releaseStart"
				name="%TeamGitFlowReleaseStart.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.releaseFinish"
				name="%TeamGitFlowReleaseFinish.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.featurePublish"
				name="%TeamGitFlowFeaturePublish.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.releasePublish"
				name="%TeamGitFlowReleasePublish.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.hotfixPublish"
				name="%TeamGitFlowHotfixPublish.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.featureTrack"
				name="%TeamGitFlowFeatureTrack.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.featureCheckout"
				name="%TeamGitFlowFeatureCheckout.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.featureRebase"
				name="%TeamGitFlowFeatureRebase.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.hotfixStart"
				name="%TeamGitFlowHotfixStart.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.hotfixFinish"
				name="%TeamGitFlowHotfixFinish.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.developCheckout"
				name="%TeamGitFlowDevelopCheckout.name">
		</command>
	</extension>
	<extension
			point="org.eclipse.ui.handlers">
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.init">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.InitHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.featureStart">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.FeatureStartHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.isInitialized">
					</test>
				</with>
			</enabledWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.developCheckout">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.DevelopCheckoutHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<not>
						<test
								forcePluginActivation="true"
								property="GitFlowRepository.isDevelop">
						</test>
					</not>
				</with>
			</enabledWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.featureFinish">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.FeatureFinishHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.isFeature">
					</test>
				</with>
			</enabledWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.releaseStart">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.ReleaseStartHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.isInitialized">
					</test>
				</with>
			</enabledWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.releaseFinish">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.ReleaseFinishHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.isRelease">
					</test>
				</with>
			</enabledWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.featurePublish">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.FeaturePublishHandler">
			</class>

			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<and>
						<test
								forcePluginActivation="true"
								property="GitFlowRepository.isFeature">
						</test>
						<test
								forcePluginActivation="true"
								property="GitFlowRepository.hasDefaultRemote">
						</test>
					</and>
				</with>
			</enabledWhen>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.releasePublish">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.ReleasePublishHandler">
			</class>

			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.isRelease">
					</test>
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.hasDefaultRemote">
					</test>
				</with>
			</enabledWhen>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.hotfixPublish">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.HotfixPublishHandler">
			</class>

			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.isHotfix">
					</test>
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.hasDefaultRemote">
					</test>
				</with>
			</enabledWhen>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.featureTrack">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.FeatureTrackHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.hasDefaultRemote">
					</test>
				</with>
			</enabledWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.featureCheckout">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.FeatureCheckoutHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.isInitialized">
					</test>
				</with>
			</enabledWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.featureRebase">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.FeatureRebaseHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.isFeature">
					</test>
				</with>
			</enabledWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.hotfixStart">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.HotfixStartHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.isInitialized">
					</test>
				</with>
			</enabledWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.hotfixFinish">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.HotfixFinishHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<test
							forcePluginActivation="true"
							property="GitFlowRepository.isHotfix">
					</test>
				</with>
			</enabledWhen>
		</handler>
	</extension>
	<extension
			point="org.eclipse.core.expressions.propertyTesters">
		<propertyTester
				class="org.eclipse.egit.gitflow.ui.internal.properties.RepositoryPropertyTester"
				id="org.eclipse.egit.gitflow.ui.propertyTester"
				namespace="GitFlowRepository"
				properties="isFeature,isRelease,isHotfix,isDevelop,isMaster,isInitialized,hasDefaultRemote"
				type="java.lang.String">
		</propertyTester>
	</extension>

	<extension
			point="org.eclipse.core.expressions.definitions">
		<definition
				id="org.eclipse.egit.gitflow.ui.commandEnabled">
			<or>
				<reference
						definitionId="org.eclipse.egit.ui.resourcesSingleRepository">
				</reference>
				<and>
					<count
							value="1">
					</count>
					<iterate>
						<and>
							<instanceof
									value="org.eclipse.egit.ui.internal.repository.tree.RepositoryTreeNode">
							</instanceof>
							<not>
								<test
										property="GitRepository.isBare">
								</test>
							</not>
						</and>
					</iterate>
				</and>
			</or>
		</definition>
	</extension>
	<extension
			point="org.eclipse.core.runtime.adapters">
		<factory adaptableType="org.eclipse.core.resources.IResource"
				class="org.eclipse.egit.gitflow.ui.internal.factories.GitFlowAdapterFactory">
			<adapter type="org.eclipse.jgit.lib.Repository"/>
		</factory>
	</extension>
	<extension
			point="org.eclipse.core.runtime.adapters">
		<factory adaptableType="org.eclipse.team.ui.history.IHistoryView"
				class="org.eclipse.egit.gitflow.ui.internal.factories.GitFlowAdapterFactory">
			<adapter type="org.eclipse.jgit.lib.Repository"/>
		</factory>
	</extension>
	<extension
			point="org.eclipse.core.runtime.adapters">
		<factory adaptableType="org.eclipse.jface.viewers.ISelection"
				class="org.eclipse.egit.gitflow.ui.internal.factories.GitFlowAdapterFactory">
			<adapter type="org.eclipse.jgit.lib.Repository"/>
		</factory>
	</extension>

	<extension
			point="org.eclipse.ui.menus">
		<menuContribution
				locationURI="popup:team.main?after=group11">
			<menu
					icon="icons/obj16/git-flow_16x10.png"
					label="%TeamGitFlowMenu.name">
				<visibleWhen
						checkEnabled="false">
					<and>
						<reference definitionId="org.eclipse.egit.ui.resourcesSingleRepository" />
						<with variable="org.eclipse.egit.ui.currentRepository">
							<test
									forcePluginActivation="true"
									property="GitFlowRepository.isInitialized">
							</test>
						</with>
					</and>
				</visibleWhen>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featureStart"
						label="%TeamGitFlowFeatureStart.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featureFinish"
						label="%TeamGitFlowFeatureFinish.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featureRebase"
						label="%TeamGitFlowFeatureRebase.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featureCheckout"
						label="%TeamGitFlowFeatureCheckout.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featureTrack"
						label="%TeamGitFlowFeatureTrack.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.featurePublish"
						label="%TeamGitFlowFeaturePublish.name"
						style="push">
				</command>
				<separator
						name="org.eclipse.egit.gitflow.ui.team.separator1"
						visible="true">
				</separator>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.releaseStart"
						label="%TeamGitFlowReleaseStart.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.releaseFinish"
						label="%TeamGitFlowReleaseFinish.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.releasePublish"
						label="%TeamGitFlowReleasePublish.name"
						style="push">
				</command>
				<separator
						name="org.eclipse.egit.gitflow.ui.team.separator2"
						visible="true">
				</separator>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.hotfixStart"
						label="%TeamGitFlowHotfixStart.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.hotfixFinish"
						label="%TeamGitFlowHotfixFinish.name"
						style="push">
				</command>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.hotfixPublish"
						label="%TeamGitFlowHotfixPublish.name"
						style="push">
				</command>
				<separator
						name="org.eclipse.egit.gitflow.ui.separator3"
						visible="true">
				</separator>
				<command
						commandId="org.eclipse.egit.gitflow.ui.command.developCheckout"
						label="%TeamGitFlowDevelopCheckout.name"
						style="push">
				</command>
			</menu>
		</menuContribution>
		<menuContribution
				locationURI="popup:team.main?after=group11">
			<command
					commandId="org.eclipse.egit.gitflow.ui.command.init"
					icon="icons/obj16/git-flow_16x10.png"
					label="%TeamGitFlowInit.name"
					style="push">
				<visibleWhen
						checkEnabled="false">
					<and>
						<reference definitionId="org.eclipse.egit.ui.resourcesSingleRepository" />
						<with variable="org.eclipse.egit.ui.currentRepository">
							<not>
								<test
										forcePluginActivation="true"
										property="GitFlowRepository.isInitialized">
								</test>
							</not>
						</with>
					</and>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<extension
			point="org.eclipse.ui.menus">
		<menuContribution
				allPopups="false"
				locationURI="popup:org.eclipse.egit.ui.historyPageContributions?after=additions">
			<menu
					icon="icons/obj16/git-flow_16x10.png"
					label="%TeamGitFlowMenu.name">
				<dynamic
						class="org.eclipse.egit.gitflow.ui.internal.menu.DynamicHistoryMenu"
						id="org.eclipse.egit.gitflow.menu.history">
					<visibleWhen
							checkEnabled="false">
						<with variable="org.eclipse.egit.ui.currentRepository">
							<test
									forcePluginActivation="true"
									property="GitFlowRepository.isInitialized">
							</test>
						</with>
					</visibleWhen>
				</dynamic>
			</menu>
		</menuContribution>
	</extension>
	<extension point="org.eclipse.ui.decorators">
		<decorator
				lightweight="true"
				adaptable="true"
				label="%Decorator_name"
				class="org.eclipse.egit.gitflow.ui.internal.decorators.GitFlowLightweightDecorator"
				state="true"
				location="TOP_RIGHT"
				id="org.eclipse.egit.gitflow.ui.internal.decorators.GitflowLightweightDecorator">
			<enablement>
				<objectClass name="org.eclipse.egit.ui.internal.repository.tree.RepositoryNode"/>
			</enablement>
			<description>
				%Decorator_description
			</description>
		</decorator>
	</extension>
	<extension
			point="org.eclipse.ui.menus">
		<menuContribution
				allPopups="false"
				locationURI="popup:replaceWithMenu?after=gitReplaceWithGroup">
			<command
					commandId="org.eclipse.egit.gitflow.ui.command.replaceWithDevelop"
					icon="icons/obj16/git-flow_16x10.png"
					label="%TeamGitFlowDevelopReplace.label"
					style="push">
				<visibleWhen
						checkEnabled="false">
					<and>
                        <with variable="activeMenu">
                            <not>
                                <iterate operator="or">
                                    <or>
                                        <equals value="#AbstractTextEditorRulerContext" />
                                        <equals value="#OverviewRulerContext" />
                                    </or>
                                </iterate>
                            </not>
                        </with>
						<with variable="org.eclipse.egit.ui.currentRepository">
							<test
									forcePluginActivation="true"
									property="GitFlowRepository.isInitialized">
							</test>
						</with>
						<reference
								definitionId="org.eclipse.egit.ui.resourcesSingleRepository">
						</reference>
						<reference
								definitionId="org.eclipse.egit.ui.resourcesAllInRepository">
						</reference>
					</and>
				</visibleWhen>
			</command>
		</menuContribution>
		<menuContribution
				allPopups="false"
				locationURI="popup:compareWithMenu?after=gitCompareWithGroup">
			<command
					commandId="org.eclipse.egit.gitflow.ui.command.compareWithDevelop"
					icon="icons/obj16/git-flow_16x10.png"
					label="%TeamGitFlowDevelopCompare.label"
					style="push">
				<visibleWhen
						checkEnabled="false">
					<and>
                        <with variable="activeMenu">
                            <not>
                                <iterate operator="or">
                                    <or>
                                        <equals value="#AbstractTextEditorRulerContext" />
                                        <equals value="#OverviewRulerContext" />
                                    </or>
                                </iterate>
                            </not>
                        </with>
						<with variable="org.eclipse.egit.ui.currentRepository">
							<test
									forcePluginActivation="true"
									property="GitFlowRepository.isInitialized">
							</test>
						</with>
						<reference
								definitionId="org.eclipse.egit.ui.resourcesSingleRepository">
						</reference>
						<reference
								definitionId="org.eclipse.egit.ui.resourcesAllInRepository">
						</reference>
					</and>
				</visibleWhen>
			</command>
		</menuContribution>
	</extension>
	<extension
			point="org.eclipse.ui.commands">
		<command
				id="org.eclipse.egit.gitflow.ui.command.replaceWithDevelop"
				name="%TeamGitFlowDevelopReplace.name">
		</command>
		<command
				id="org.eclipse.egit.gitflow.ui.command.compareWithDevelop"
				name="%TeamGitFlowDevelopCompare.name">
		</command>
	</extension>
	<extension
			point="org.eclipse.ui.handlers">
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.replaceWithDevelop">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.DevelopReplaceHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<not>
						<test
								forcePluginActivation="true"
								property="GitFlowRepository.isDevelop">
						</test>
					</not>

				</with>
			</enabledWhen>
		</handler>
		<handler
				commandId="org.eclipse.egit.gitflow.ui.command.compareWithDevelop">
			<class
					class="org.eclipse.egit.gitflow.ui.internal.actions.DevelopCompareHandler">
			</class>
			<activeWhen>
				<reference
						definitionId="org.eclipse.egit.gitflow.ui.commandEnabled">
				</reference>
			</activeWhen>
			<enabledWhen>
				<with variable="org.eclipse.egit.ui.currentRepository">
					<not>
						<test
								forcePluginActivation="true"
								property="GitFlowRepository.isDevelop">
						</test>
					</not>

				</with>
			</enabledWhen>
		</handler>
	</extension>
</plugin>
